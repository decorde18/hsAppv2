icons
copy/duplicate - HiSquare2Stack
logout - HiArrowRightOnRectangle
edit - HiPencil,
delete - HiTrash,
cancel/small x - HiMiniXMark,
user - HiOutlineUser
settings/3 dots - HiEllipsisVertical
close x - HiXMark
triangle down - HiChevronDown , triangle up- HiChevronUp, HiChevronUpDown
HiOutlineChartBar stats
HiEye - eyeball

useCreateData({ newData, table, view })
  isCreating, createData
useData({ table, filter, sort })
  isLoading, data
useUpdateData({ table, newData, id, view })
  isUpdating, updateData
useDeleteData({ view, table, id })
   isDeleting, deleteData
     const playerSeasons = useData({
    table: 'playerSeasons',
    filter: [        field,
        value,
        textSearch(boolean)]
    sort: [{field, direction (boolean), }]
  });

<Heading as="h1" case="upper" location="center">
new player form
</Heading>
<Heading as="h5" case="upper" location="center">

<Row type="vertical" justify="space-between" align='center'>

<Button size='medium type="selected" variation="primary"> type = selected  fullWidth

 Input = ({ size = defaultAnimationValues.size, ...props 
 })
                         register={{
                          ...register(each.field, {
                            required: each.required ? each.message : false,
                          }),
                        }}
                        ref={null} SIZE IN REM

      <Select
        width={12.7}
        options={value, label}
        onChange={handleSelectChange}
        name="status"
        disabled={isWorking}
        value={toggleStates['status']}
      />

 Collapsible({ children, animation = defaultAnimationValues, open }

 Checkbox = ({
  label,
  checked,
  onChange,
  size = defaultAnimationValues.size,
  ...props
}
Switch({ checked, onChange, name, disabled })

ModalConfirm({
  resourceName,
  onConfirm,
  disabled,
  onCloseModal,
  confirmType,
})

